@model solution2.Models.PatientModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title style="color: #3366cc;">Add or Edit Patient</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
        }

        .form-container {
            max-width: 600px;
            margin: 50px auto;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            font-weight: bold;
        }

        .button-container {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="form-container">
            @using (Html.BeginForm("AddorEdit", "Patient", FormMethod.Post))
            {
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.created_on)

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label">Patient Name</label>
                            @Html.EditorFor(model => model.PatientName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.PatientName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label">Gender</label>
                            @Html.DropDownListFor(model => model.GenderId,
       new List<SelectListItem>
       {
           new SelectListItem { Text = "Male", Value = "1" },
           new SelectListItem { Text = "Female", Value = "2" },
           new SelectListItem { Text = "Others", Value = "3" }
       },
       new { @class = "form-control", required = "required" })


                            @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label">Date of Birth</label>
                            @Html.TextBoxFor(model => model.DOB, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker", @data_val = "true", @data_val_date = "The field DOB must be a date.", @data_val_age_validation = "You must be at least 18 years old." })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label">Height</label>
                            @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label">Weight</label>
                            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label">BMI</label>
                            @Html.EditorFor(model => model.BMI, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.BMI, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <!--<div class="col-md-6 offset-md-3">-->
                    <!-- Updated On -->
                    <!--<div class="form-group">
                        <label class="form-label">Updated On</label>
                        @Html.EditorFor(model => model.updated_on, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.updated_on, "", new { @class = "text-danger" })
                    </div>-->
                    <!-- Create By -->
                    <!--<div class="form-group">
                        <label class="form-label">Create By</label>
                        @Html.EditorFor(model => model.create_by, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.create_by, "", new { @class = "text-danger" })
                    </div>-->
                    <!-- Updated By -->
                    <!--<div class="form-group">
                        <label class="form-label">Updated By</label>
                        @Html.EditorFor(model => model.updated_by, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.updated_by, "", new { @class = "text-danger" })
                    </div>
                </div>-->

                <div class="button-container">
                    <input type="submit" value="Submit" class="btn btn-primary btn-lg" />
                    <input type="reset" value="Reset" class="btn btn-dark btn-lg" />
                </div>
            }
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.datepicker').datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: 'yy-mm-dd',
                yearRange: '-100:+0',
                maxDate: '-18Y'
            });
        });
    </script>
</body>
</html>
